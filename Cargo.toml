[package]
name = "bevy_eventwork"
version = "0.8.0"
authors = ["James <jamescarterbell@gmail.com>", "Neikos <neikos@neikos.email>"]
edition = "2021"
description = "Event based networking library for Bevy"
readme = "README.md"
repository = "https://github.com/jamescarterbell/bevy_eventwork"
license = "MIT"
categories = ["game-development", "network-programming"]
autoexamples = false
exclude = ["assets"]
resolver = "2"

[badges]
maintenance = { status = "actively-developed" }

[features]
default = ["ws"]
tcp = ["async-net"]
ws = [
    "async-tungstenite",
    "async-std",
    "url",
    "ws_stream_tungstenite",
    "ws_stream_wasm",
    "futures",
    "async_io_stream",
]

[[example]]
name = "client"

[[example]]
name = "server"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# This is a bevy plugin
bevy = { version = "0.12.0", features = [], default-features = false }
# Used for on wire serialization
bincode = "1.3.3"
serde = { version = "1.0.190", features = ["derive"] }
serde_json = { version = "1.0.108" }
# Used for thread safe book keeping
dashmap = "5.5.3"
# Used for non-tokio dependent threaded message passing
async-channel = "2.1.0"
# Used for providers, which are async in nature
async-trait = "0.1.74"
# Used for TCP provider
async-net = { version = "2.0.0", optional = true }

# Websocket
url = { version = "2.0.0", optional = true }
futures = { version = "0.3.29", optional = true }

# Used 1.33.0or Stream type and other ext
futures-lite = "2.0.0"

[dev-dependencies]
bevy = "0.12.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
async-tungstenite = { version = "0.23.0", optional = true, features = [
    "async-std-runtime",
] }
ws_stream_tungstenite = { version = "0.11.0", optional = true }
async-std = { version = "1.12.0", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
ws_stream_wasm = { version = "0.7.4", optional = true }
async_io_stream = { version = "0.3.3", optional = true }
